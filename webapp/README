This is the JPS Large Accounts Viewer web application. The following
deployment instructions are for a vanilla RedHat Enterprise Linux 7.1 
machine.

# Install basic packages necessary for development (as root!)
sudo yum install git
sudo yum install gcc
sudo yum install gcc-c++
sudo yum install python-devel
sudo yum install scipy
sudo easy_install pip
sudo pip install uwsgi
sudo mkdir /etc/uwsgi
sudo mkdir /etc/uwsgi/vassals

# If we are running our own MySQL:
sudo yum install mysql
sudo yum install mysql-devel
sudo yum install mariadb-server

# Install and create a python virtual environment
curl -O https://pypi.python.org/packages/source/v/virtualenv/virtualenv-12.1.1.tar.gz
tar xvzf virtualenv-12.1.1.tar.gz
python virtualenv-12.1.1/virtualenv.py --system-site-packages jps
source jps/bin/activate

# Get the Impact Lab code and install requirements
git clone https://github.com/impactlab/jps-handoff.git
cd jps-handoff
pip install -r requirements.txt

# If using our own mysql:
sudo systemctl start mariadb.service
sudo systemctl enable mariadb.service

# Create DB
mysql -u root
CREATE DATABASE impactlab CHARACTER SET utf8;
CREATE USER 'impactlab'@'localhost' IDENTIFIED BY 'impactlab';
GRANT ALL PRIVILEGES ON impactlab . * TO 'impactlab'@'localhost';
FLUSH PRIVILEGES;

# Create database tables
cd ~/jps-handoff/webapp
python manage.py migrate

# Install nginx
1. Create the nginx yum info
  sudo vi /etc/yum.repos.d/nginx.repo

[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/rhel/7/$basearch/
gpgcheck=0
enabled=1

2. Save an exit vi. Now: 
sudo yum install nginx.x86_64
sudo service nginx start
sudo chkconfig nginx on

3. Configure nginx for uwsgi
USER=ec2-user
cd ~/jps-handoff/webapp
cat >jps_nginx.conf <<EOF
# mysite_nginx.conf

# the upstream component nginx needs to connect to
upstream django {
    server 127.0.0.1:8001;
}

server {
    listen      8080;
    server_name .example.com; # substitute your machine's IP address or FQDN
    charset     utf-8;
    client_max_body_size 75M; 
    location /media  {
        alias /home/$USER/jps-handoff/jps/media;
    }
    location /static {
        alias /home/$USER/jps-handoff/jps/static;
    }
    location / {
        uwsgi_pass  django;
        include     /etc/nginx/uwsgi_params;
    }
}
EOF
sudo rm /etc/nginx/conf.d/*
sudo mv /home/$USER/jps-handoff/webapp/jps_nginx.conf /etc/nginx/conf.d
sudo service nginx restart

4. Collect static files
cd /home/$USER/jps-handoff/webapp
python manage.py collectstatic
sudo chcon -Rt httpd_sys_content_t /home/$USER/jps-handoff/webapp/static

5. Set up uWSGI
cd /home/$USER/jps-handoff/webapp
cat > jps_uwsgi.ini <<EOF
[uwsgi]

# Django-related settings
chdir           = /home/$USER/jps-handoff/webapp
module          = jps.wsgi
# Python virtualenv 
home            = /home/$USER/jps

master          = true
processes       = 10
socket          = :8001
vacuum          = true
EOF

sudo mv jps_uwsgi.ini /etc/uwsgi/vassals
semanage port -a -t http_port_t -p tcp 8001

cat >emperor.uwsgi.service <<EOF
[Unit]
Description=uWSGI Emperor
After=syslog.target

[Service]
ExecStart=/usr/bin/uwsgi --ini /etc/uwsgi/emperor.ini
Restart=always
KillSignal=SIGQUIT
Type=notify
StandardError=syslog
NotifyAccess=all

[Install]
WantedBy=multi-user.target
EOF

sudo mv emperor.uwsgi.service /etc/systemd/system/

cat >emperor.ini <<EOF
[uwsgi]
emperor = /etc/uwsgi/vassals
uid = nginx
gid = nginx
EOF

sudo mv emperor.ini /etc/uwsgi

sudo systemctl daemon-reload
sudo systemctl start emperor.uwsgi.service
sudo systemctl enable emperor.uwsgi.service

# Set up SVC scraper
cat >>~/.bashrc <<EOF
export SVC_USER=...
export SVC_PASS=...
EOF

